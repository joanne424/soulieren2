<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:Class="DM2.Ent.Client.Views.Resources.Theme.DarkBlue.WindowsResourceDictionary"
                    xmlns:presentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:local="clr-namespace:DM2.Ent.Client.Views">
    <!--通用弹出窗口，只有关闭按钮的窗口Template，-->
    <ControlTemplate x:Key="CommonOnlyCloseWindowTemplate"
                         TargetType="{x:Type Window}">
        <ControlTemplate.Resources>
            <!--TextBlock模板内默认样式-->
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontStretch" Value="Medium"></Setter>
                <!--<Setter Property="FontWeight" Value="300"></Setter>-->
                <!--<Setter Property="TextOptions.TextFormattingMode"
                Value="Display" />
                <Setter Property="TextOptions.TextRenderingMode"
                Value="Aliased" />-->
                <Setter Property="FontSize" Value="12" />
            </Style>

            <Style TargetType="{x:Type StackPanel}">
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
        </ControlTemplate.Resources>
        <Grid MouseMove="OnMouseMove">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" 
                    Background="#264E72"
                    MouseLeftButtonDown="MouseLeftDragMove" Padding="0">
                <Grid Height="40" Margin="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="40"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{TemplateBinding Title}" 
                               HorizontalAlignment="Left" 
                               VerticalAlignment="Center"
                               Width="Auto" 
                               Grid.Column="0"
                               Margin="16,0,0,0"
                               FontWeight="500" 
                               FontSize="20" 
                               FontStyle="Normal" 
                               Foreground="#FFFFFF" 
                               FontFamily="Microsoft YaHei"></TextBlock>
                    <Image Source="Images/CommonClose.png" 
                           Stretch="None"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right"
                           Height="15"
                           Width="15"
                           Cursor="Hand"
                           Grid.Column="1"
                           Margin="0,14,20,0"
                           cal:Message.Attach="[Event MouseDown]=[Action Close]">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="-45"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                </Grid>
            </Border>
            <Border Grid.Row="1"
                    BorderThickness="1"
                    BorderBrush="#BCBCBC"
                    Background="#FFFFFF"
                    Padding="10,20,10,10">
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
            </Border>
        </Grid>

        <!--设置BORDER的StyleSkinBorder-->
        <!--<Border Background="#FFFFFF"  
                    BorderBrush="#BCBCBC"
                    BorderThickness="1"
                    SnapsToDevicePixels="True">
            <Grid Background="Transparent">
                <DockPanel>
                    <Grid x:Name="WindowHeader"
                              DockPanel.Dock="Top"
                              Background="{StaticResource mainWindowTitleBrush}"
                              Height="Auto">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="33" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>-->
        <!--App Title-->
        <!--<TextBlock  Grid.Row="0"
                                        Grid.Column="0" 
                                        Text="{Binding RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=Window},Path=Title}"
                                        HorizontalAlignment="Left"
                                        FontSize="18"
                                        TextAlignment="Left"
                                        FontWeight="Bold"
                                        Padding="10,0,5,5" />
                    </Grid>
                    <ContentPresenter Content="{TemplateBinding Content}" />
                </DockPanel>
            </Grid>
        </Border>-->
    </ControlTemplate>

    <ControlTemplate x:Key="NormalWindowWithMaximizeTemplate" TargetType="{x:Type Window}">
        <ControlTemplate.Resources>

            <!--TextBlock模板内默认样式-->
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontStretch" Value="Medium" />
                <Setter Property="FontSize" Value="12" />
            </Style>

            <Style TargetType="{x:Type StackPanel}">
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
        </ControlTemplate.Resources>
        <Grid MouseMove="OnMouseMove">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Background="#264E72" MouseLeftButtonDown="MouseLeftDragMove">
                <Grid Margin="15,0" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="36"/>
                        <ColumnDefinition Width="26"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="{Binding RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=Window},Path=Title}"
                               HorizontalAlignment="Left" VerticalAlignment="Center"
                               FontWeight="500" FontSize="20" Foreground="#FFFFFF" 
                               FontFamily="Microsoft YaHei"></TextBlock>
                    <!--Command="local:ControlAttachProperty.MinimizeWindowCommand"
                    local:ControlAttachProperty.IsMinimizeWindowButtonBehaviorEnabled="True"-->
                    <Button Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Width="25" Height="16"
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}">
                        <Button.Template>
                            <ControlTemplate >
                                <Image Source="/Resources/Images/DarkBlue/window_minimize.png"></Image>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <!--Command="local:ControlAttachProperty.MaximizeWindowCommand"
                    local:ControlAttachProperty.IsMaximizeWindowButtonBehaviorEnabled="True"-->
                    <Button Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center"
                            Width="25" Height="16" x:Name="MaxNormalBtn"
                            
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <Image x:Name="maxImg" Source="/Resources/Images/DarkBlue/window_maximize.png">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Value="Maximized" 
                                                                 Binding="{Binding WindowState,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>

                                    <Image x:Name="normalImg" Source="/Resources/Images/DarkBlue/window_normal.png">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Style.Triggers>
                                                    <DataTrigger Value="Maximized" 
                                                                 Binding="{Binding WindowState,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <!--Max 点击效果-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsPressed,ElementName=MaxNormalBtn}" Value="True" />
                                            <Condition Binding="{Binding Visibility,ElementName=maxImg}" Value="Visible" />
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                    <!--Restore 点击效果-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsPressed,ElementName=MaxNormalBtn}" Value="True" />
                                            <Condition Binding="{Binding Visibility,ElementName=normalImg}" Value="Visible" />
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <Button Grid.Column="3" VerticalAlignment="Center" Width="23" Height="15" cal:Message.Attach="[Event Click]=[Action Close]">
                        <Button.Template>
                            <ControlTemplate >
                                <Image Source="/Resources/Images/DarkBlue/window_close.png"></Image>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Grid>
            </Border>
            <Border Grid.Row="1" BorderThickness="1"  BorderBrush="#BCBCBC" Background="#FFFFFF" Padding="10">
                <ContentPresenter/>
            </Border>
        </Grid>
    </ControlTemplate>

    <!--通用弹出窗口，只有关闭按钮的窗口Stye，-->
    <Style x:Key="CommonOnlyCloseWindowStyle" TargetType="Window">
        <Setter Property="AllowsTransparency" Value="True"></Setter>
        <Setter Property="WindowStyle" Value="None"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template" Value="{StaticResource CommonOnlyCloseWindowTemplate}"></Setter>
        <Setter Property="ResizeMode" Value="NoResize"></Setter>
        <Setter Property="ShowInTaskbar" Value="True"></Setter>
        <Setter Property="Topmost" Value="True"></Setter>
    </Style>

    <Style x:Key="NormalWindowWithMaximizeStyle" TargetType="Window">
        <Setter Property="AllowsTransparency" Value="True"></Setter>
        <Setter Property="WindowStyle" Value="None"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template" Value="{StaticResource NormalWindowWithMaximizeTemplate}"></Setter>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"></Setter>
        <Setter Property="ShowInTaskbar" Value="True"></Setter>
        <Setter Property="Topmost" Value="True"></Setter>
        <Setter Property="WindowState" Value="Normal"></Setter>
    </Style>

    <Style x:Key="NormalWindowWithMaximizeStyle1" TargetType="Window">
        <Setter Property="AllowsTransparency" Value="True"></Setter>
        <Setter Property="WindowStyle" Value="None"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template" Value="{StaticResource NormalWindowWithMaximizeTemplate}"></Setter>
        <Setter Property="ShowInTaskbar" Value="True"></Setter>
        <Setter Property="Topmost" Value="True"></Setter>
        <Setter Property="WindowState" Value="Normal"></Setter>
    </Style>


    <Style x:Key="TitleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontStretch" Value="Medium"></Setter>
        <Setter Property="FontWeight" Value="400"></Setter>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#3E8ACC"></Setter>
    </Style>

    <!--主窗口Template-->
    <ControlTemplate x:Key="MainWindowTemplate"
                         TargetType="{x:Type Window}">
        <Grid MouseMove="OnMouseMove">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <!--标题栏-->
            <Border Grid.Row="0" 
                    Grid.RowSpan="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Background="#EFEFEF"
                    MouseLeftButtonDown="WindowsTitleMouseLeftButtonDown" 
                    MouseLeftButtonUp="WindowsTitleMouseLeftButtonUp"
                    BorderThickness="1,1,1,0"
                    BorderBrush="#797979"
                    Padding="0">
                <Grid Margin="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="130"></ColumnDefinition>
                        <ColumnDefinition Width="140"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="140"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <!--Banclogix企业Logo-->
                    <Image Grid.Row="0"
                                   Grid.Column="0"
                                   Width="111"
                                   Height="25"
                           Source="/Resources/Theme/DarkBlue/Images/logo.png"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor"
                                   HorizontalAlignment="Left"
                                   Margin="8,0,0,0"></Image>

                    <!--软件标题-->
                    <TextBlock Grid.Row="0" 
                                        Grid.Column="1"
                               Text="DM2 Ent Client" 
                                        HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               Width="Auto" 
                               Margin="0,0,0,0"
                               FontWeight="500" 
                               FontSize="16" 
                               FontStyle="Normal" 
                               Foreground="#264E72" 
                               FontFamily="Microsoft JhengHei"></TextBlock>

                    <!--最小化按钮-->
                    <Button Grid.Row="0"
                            Grid.Column="3" 
                            Click="OnMinimizeWindow"
                                    Margin="0,0,73,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Width="29"
                                    Height="19">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border>
                                    <Image Name="tgImg"
                                                   Source="/Resources/Images/White/MainWindowHeader/MinBtnNormal.png" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"
                                                     Value="True">
                                        <Setter TargetName="tgImg"
                                                        Property="Source"
                                                        Value="/Resources/Images/White/MainWindowHeader/MinBtnHover.png" />
                                    </Trigger>
                                    <Trigger Property="IsPressed"
                                                     Value="True">
                                        <Setter TargetName="tgImg"
                                                        Property="Source"
                                                        Value="/Resources/Images/White/MainWindowHeader/MinBtnClick.png" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <!--最大化按钮-->
                    <Button Grid.Row="0"
                            Grid.Column="3"
                            Click="OnMaximizeWindow"
                                    Margin="0,0,47,0"
                                    Name="maxResBtn"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Width="26"
                                    Height="19">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <Image Name="maxImg"
                                                   Source="/Resources/Images/White/MainWindowHeader/MaxBtnNormal.png">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Visibility"
                                                                Value="Visible" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding WindowState,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"
                                                                         Value="Maximized">
                                                        <Setter Property="Visibility"
                                                                        Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <Image Name="resImg"
                                                   Source="/Resources/Images/White/MainWindowHeader/RestoreBtnNormal.png">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Visibility"
                                                                Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding WindowState,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}}"
                                                                         Value="Maximized">
                                                        <Setter Property="Visibility"
                                                                        Value="Visible" />
                                                    </DataTrigger>
                                                    <!--<Trigger  Property="IsMouseOver"
                                                                          Value="True">
                                                                    <Setter Property="Source"
                                                                            Value="/Resources/Images/White/MainWindowHeader/RestoreBtnHover.png" />
                                                                </Trigger>-->
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <!--Max 点击效果-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsPressed,ElementName=maxResBtn}"
                                                               Value="True" />
                                            <Condition Binding="{Binding Visibility,ElementName=maxImg}"
                                                               Value="Visible" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter TargetName="maxImg"
                                                            Property="Source"
                                                            Value="/Resources/Images/White/MainWindowHeader/MaxBtnClick.png" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <!--Max IsMouseOver效果-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver,ElementName=maxResBtn}"
                                                               Value="True" />
                                            <Condition Binding="{Binding Visibility,ElementName=maxImg}"
                                                               Value="Visible" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter TargetName="maxImg"
                                                            Property="Source"
                                                            Value="/Resources/Images/White/MainWindowHeader/MaxBtnHover.png" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <!--Restore 点击效果-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsPressed,ElementName=maxResBtn}"
                                                               Value="True" />
                                            <Condition Binding="{Binding Visibility,ElementName=resImg}"
                                                               Value="Visible" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter TargetName="resImg"
                                                            Property="Source"
                                                            Value="/Resources/Images/White/MainWindowHeader/RestoreBtnClick.png" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <!--Restore IsMouseOver效果-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver,ElementName=maxResBtn}"
                                                               Value="True" />
                                            <Condition Binding="{Binding Visibility,ElementName=resImg}"
                                                               Value="Visible" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter TargetName="resImg"
                                                            Property="Source"
                                                            Value="/Resources/Images/White/MainWindowHeader/RestoreBtnHover.png" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                                <!--<ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                    <Setter TargetName="tgImg"
                                                            Property="Source"
                                                            Value="/Resources/Images/White/MainWindowHeader/MaxBtnHover.png" />
                                                </Trigger>
                                                
                                                <Trigger Property="IsPressed"
                                                         Value="True">
                                                    <Setter TargetName="tgImg"
                                                            Property="Source"
                                                            Value="/Resources/Images/White/MainWindowHeader/MaxBtnClick.png" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>-->
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <!--关闭按钮-->
                    <Button Grid.Row="0"
                                Grid.Column="3"
                                    cal:Message.Attach="[Event Click]=[Action ExitSys]"
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Width="42"
                                    Height="19">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border>
                                    <Image Name="tgImg"
                                                   Source="/Resources/Images/White/MainWindowHeader/CloseBtnNormal.png" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"
                                                     Value="True">
                                        <Setter TargetName="tgImg"
                                                        Property="Source"
                                                        Value="/Resources/Images/White/MainWindowHeader/CloseBtnHover.png" />
                                    </Trigger>
                                    <Trigger Property="IsPressed"
                                                     Value="True">
                                        <Setter TargetName="tgImg"
                                                        Property="Source"
                                                        Value="/Resources/Images/White/MainWindowHeader/CloseBtnClick.png" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Grid>
            </Border>

            <!--菜单栏-->
            <Grid Grid.Row="2" 
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  x:Name="WindowHeader"
                  Height="Auto">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!--菜单部分-->
                <!--Background="#264E72"
                           Foreground="#FFFFFF"-->
                <Menu Grid.Row="0"
                           VerticalAlignment="Center"
                           Height="30">
                    <MenuItem Header="{DynamicResource 'File(F)'}" 
                                  Margin="5,3,0,0"
                                  VerticalContentAlignment="Center"
                                  VerticalAlignment="Center">
                        <MenuItem Header="{DynamicResource 'ChangePassword'}"
                                              cal:Message.Attach="[Event Click]=[Action ShowChangPwdWindow]"
                                              Visibility="{Binding VisibleChangePasswordItem}"></MenuItem>
                        <!--Login-->
                        <MenuItem x:Name="LoginLogoutMenuItem" Header="{Binding LoginLogoutMenuHeader}"
                                              cal:Message.Attach="[Event Click]=[Action LoginLogoutMenuAction]"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource 'Trade(T)'}"
                                  Margin="0,3,0,0">
                        <MenuItem Header="{DynamicResource NewHedgeSpotForward}" 
                                      cal:Message.Attach="[Event Click] = [Action NewHedgeSpotForwardMenuAction]"
                                      Visibility="{Binding VisibleWhenLogin}"></MenuItem>
                        <MenuItem Header="{DynamicResource NewHedgeSwapDeal}" 
                                      cal:Message.Attach="[Event Click] = [Action NewHedgeSwapMenuAction]"
                                      Visibility="{Binding VisibleWhenLogin}"></MenuItem>

                        <!--<MenuItem Header="{DynamicResource NewInternalDeal}" cal:Message.Attach="[Event Click] = [Action NewInternalDealMenuAction]"></MenuItem>-->
                        <MenuItem Header="{DynamicResource BankCashTransfer}" 
                                      cal:Message.Attach="[Event Click] = [Action BankCashTransferMenuAction]"
                                      Visibility="{Binding VisibleWhenLogin}"></MenuItem>
                        <MenuItem Header="{DynamicResource BankAccountActualCash}" 
                                      cal:Message.Attach="[Event Click] = [Action NewBankAccountActualCash]"
                                      Visibility="{Binding VisibleWhenLogin}"></MenuItem>
                        <!--<MenuItem Header="{DynamicResource NewHedgeSpotForware}" cal:Message.Attach="[Event Click] = [Action NewHedgeDealCommand]"></MenuItem>
                            <MenuItem Header="{DynamicResource NewHedgeSpotForward}" cal:Message.Attach="[Event Click] = [Action NewHedgeDealCommand]"></MenuItem>-->
                    </MenuItem>
                    <MenuItem Header="{DynamicResource 'Report(R)'}"
                                  Margin="0,3,0,0"
                                  >
                        <MenuItem Header="{DynamicResource BankCashTransferReport}" 
                                              cal:Message.Attach="[Event Click] = [Action BankCashTransferReportMenuAction]"
                                              Visibility="{Binding VisibleWhenLogin}"></MenuItem>
                        <MenuItem Header="{DynamicResource BankCashFlowList}" 
                                              cal:Message.Attach="[Event Click] = [Action BankCashFlowReportMenuAction]"
                                              Visibility="{Binding VisibleWhenLogin}"></MenuItem>

                        <MenuItem Header="{DynamicResource BankAccountActualCashReport}" 
                                              cal:Message.Attach="[Event Click] = [Action OpenBankAccountActualCashReport]"
                                              Visibility="{Binding VisibleWhenLogin}"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource 'Tools(S)'}"
                                      Margin="0,3,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center">
                        <!--BU 二级菜单-->
                        <MenuItem Header="{DynamicResource 'BusinessUnit'}"
                                              Visibility="{Binding VisibleWhenLogin}">
                            <MenuItem cal:Message.Attach="[Event Click]=[Action NewBusinessUnit()]">
                                <MenuItem.HeaderTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{DynamicResource 'New'}"></TextBlock>
                                            <TextBlock Text="{DynamicResource 'BusinessUnit'}"></TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </MenuItem.HeaderTemplate>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource 'BusinessUnitListTitle'}"
                                                  Visibility="{Binding VisibleWhenLogin}"
                                                                  cal:Message.Attach="[Event Click]=[Action OpenBusinessUnitList()]">
                            </MenuItem>
                        </MenuItem>
                        <!--企业用户 二级菜单-->
                        <MenuItem Header="{DynamicResource 'User'}"
                                              Visibility="{Binding VisibleWhenLogin}">
                            <MenuItem cal:Message.Attach="[Event Click]=[Action NewUser()]" >
                                <MenuItem.HeaderTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{DynamicResource 'New'}"></TextBlock>
                                            <TextBlock Text="{DynamicResource 'User'}"></TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </MenuItem.HeaderTemplate>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource 'UserListTitle'}"
                                                                  cal:Message.Attach="[Event Click]=[Action OpenUserList()]">
                            </MenuItem>
                        </MenuItem>
                        <!--企业用户角色 二级菜单-->
                        <!--<MenuItem Header="{DynamicResource 'UserRole'}"
                                              Visibility="{Binding VisibleWhenLogin}">

                        </MenuItem>-->
                        <!--交易对手 二级菜单-->
                        <MenuItem Header="{DynamicResource 'Counterparty'}"
                                              Visibility="{Binding VisibleWhenLogin}">
                            <MenuItem cal:Message.Attach="[Event Click]=[Action NewCounterparty()]" >
                                <MenuItem.HeaderTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{DynamicResource 'New'}"></TextBlock>
                                            <TextBlock Text="{DynamicResource 'Counterparty'}"></TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </MenuItem.HeaderTemplate>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource 'CounterpartyListTitle'}"
                                                                  cal:Message.Attach="[Event Click]=[Action OpenCounterpartyList()]">
                            </MenuItem>
                        </MenuItem>
                        <!--交易对手组 二级菜单-->
                        <MenuItem Header="{DynamicResource 'CounterpartyGroup'}"
                                              Visibility="{Binding VisibleWhenLogin}">
                            <MenuItem cal:Message.Attach="[Event Click]=[Action NewCounterpartyGroup()]" >
                                <MenuItem.HeaderTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{DynamicResource 'New'}"></TextBlock>
                                            <TextBlock Text="{DynamicResource 'CounterpartyGroup'}"></TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </MenuItem.HeaderTemplate>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource 'CounterpartyGroupListTitle'}"
                                                                  cal:Message.Attach="[Event Click]=[Action OpenCounterpartyGroupList()]">
                            </MenuItem>
                        </MenuItem>
                        <!--Report 二级菜单-->
                        <!--<MenuItem Header="{DynamicResource 'Group'}" 
                                              Visibility="{Binding VisibleWhenLogin}">

                        </MenuItem>-->
                        <!--Report 二级菜单-->
                        <MenuItem Header="{DynamicResource 'BankAccountManagement'}" 
                                              Visibility="{Binding VisibleWhenLogin}">
                            <MenuItem Header="{DynamicResource 'NewBankAccount'}" cal:Message.Attach="[Event Click]=[Action OpenNewBankAcctClick]"></MenuItem>
                            <MenuItem Header="{DynamicResource 'BankAccountList'}" cal:Message.Attach="[Event Click]=[Action OpenBankAcctListClick]"></MenuItem>
                        </MenuItem>
                    </MenuItem>
                </Menu>

                <!--按钮栏显示不显示的切换按钮-->
                <ToggleButton Grid.Row="0"
                                          Cursor="Hand"
                                          Panel.ZIndex="99"
                                          IsChecked="{Binding IsExpanded}"
                                          HorizontalAlignment="Center"
                                          Width="79"
                                          Height="8"
                                          Margin="0,0,0,-0"
                                          VerticalAlignment="Bottom">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border>
                                <Image Name="tgImg"
                                                   Source="/Resources/Images/White/ToggleDown.png" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                                     Value="True">
                                    <Setter TargetName="tgImg"
                                                        Property="Source"
                                                        Value="/Resources/Images/White/ToggleUp.png" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>

                <Border Grid.Row="1" BorderBrush="#797979" BorderThickness="1" Background="#FFFFFF">
                    <!--图标菜单栏-->
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <ListView Grid.Column="1" ItemsSource="{Binding LoginoutMenuItems}" BorderThickness="0">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Button MinWidth="50" Margin="5,3,5,0" Visibility="{Binding VisibilityFlag}" HorizontalAlignment="Center"
                                                ToolTip="{Binding ToolTip}"
                                                Style="{DynamicResource MenuButton}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <cal:ActionMessage MethodName="MenuItemClick">
                                                    <cal:Parameter Value="{Binding MethodName}" />
                                                </cal:ActionMessage>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                        <Image Grid.Column="2" Source="/Resources/Theme/DarkBlue/Images/splitline.png"></Image>

                        <ListView Grid.Column="4" ItemsSource="{Binding MenuItems}" BorderThickness="0">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Button MinWidth="50" Margin="5,3,5,0" Visibility="{Binding VisibilityFlag}" HorizontalAlignment="Center"
                                            ToolTip="{Binding ToolTip}"
                                            Style="{DynamicResource MenuButton}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <cal:ActionMessage MethodName="MenuItemClick">
                                                    <cal:Parameter Value="{Binding MethodName}" />
                                                </cal:ActionMessage>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </Border>
            </Grid>

            <!--主体内容-->
            <Border Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Grid.RowSpan="2"
                    BorderBrush="#797979"
                    BorderThickness="1,1,1,2"
                    SnapsToDevicePixels="True"
                    Background="#FFFFFF">
                <ContentPresenter Content="{TemplateBinding Content}" />
            </Border>

            <!--窗口顶部高度调整-->
            <!--注意此项是覆盖在其他内容之上的，只是此项被设置为透明，此项必须放在其他项之后这样才能确保显示，否则将被覆盖-->
            <Rectangle Grid.Row="0" 
                       Grid.Column="1"
                       Height="5"
                       Cursor="SizeNS"
                       Fill="Transparent"
                       MouseLeftButtonDown="WindowsInitiateTopHight"
                       MouseLeftButtonUp="WindowsEndTopHight"
                       MouseMove="WindowsTopHightChanging"></Rectangle>

            <!--窗口底部高度调整-->
            <!--注意此项是覆盖在其他内容之上的，只是此项被设置为透明，此项必须放在其他项之后这样才能确保显示，否则将被覆盖-->
            <Rectangle Grid.Row="4" 
                       Grid.Column="1"
                       Height="5"
                       Cursor="SizeNS"
                       Fill="Transparent"
                       MouseLeftButtonDown="WindowsInitiateBottomHight"
                       MouseLeftButtonUp="WindowsEndBottomHight"
                       MouseMove="WindowsBottomHightChanging"></Rectangle>

            <!--窗口左宽度调整-->
            <!--注意此项是覆盖在其他内容之上的，只是此项被设置为透明，此项必须放在其他项之后这样才能确保显示，否则将被覆盖-->
            <Rectangle Grid.Row="1" 
                       Grid.Column="0"
                       Grid.RowSpan="3"
                       Width="5"
                       Cursor="SizeWE"
                       Fill="Transparent"
                       MouseLeftButtonDown="WindowsInitiateLeftWiden"
                       MouseLeftButtonUp="WindowsEndLeftWiden"
                       MouseMove="WindowsLeftWiden"></Rectangle>

            <!--窗口右宽度调整-->
            <!--注意此项是覆盖在其他内容之上的，只是此项被设置为透明，此项必须放在其他项之后这样才能确保显示，否则将被覆盖-->
            <Rectangle Grid.Row="1" 
                       Grid.Column="2"
                       Grid.RowSpan="3"
                       Width="5"
                       Cursor="SizeWE"
                       Fill="Transparent"
                       MouseLeftButtonDown="WindowsInitiateRightWiden"
                       MouseLeftButtonUp="WindowsEndRightWiden"
                       MouseMove="WindowsRightWiden"></Rectangle>

            <!--窗口左上Grip调整-->
            <!--注意此项是覆盖在其他内容之上的，只是此项被设置为透明，此项必须放在其他项之后这样才能确保显示，否则将被覆盖-->
            <Rectangle Grid.Row="0" 
                       Grid.Column="0"
                       Width="5"
                       Height="5"
                       Cursor="SizeNWSE"
                       Fill="Transparent"
                       MouseLeftButtonDown="WindowsInitiateLeftTopGrip"
                       MouseLeftButtonUp="WindowsEndLeftTopGrip"
                       MouseMove="WindowsLeftTopGrip"></Rectangle>

            <!--窗口右上Grip调整-->
            <!--注意此项是覆盖在其他内容之上的，只是此项被设置为透明，此项必须放在其他项之后这样才能确保显示，否则将被覆盖-->
            <Rectangle Grid.Row="0" 
                       Grid.Column="2"
                       Width="5"
                       Height="5"
                       Cursor="SizeNESW"
                       Fill="Transparent"
                       MouseLeftButtonDown="WindowsInitiateRightTopGrip"
                       MouseLeftButtonUp="WindowsEndRightTopGrip"
                       MouseMove="WindowsRightTopGrip"></Rectangle>

            <!--窗口左下Grip调整-->
            <!--注意此项是覆盖在其他内容之上的，只是此项被设置为透明，此项必须放在其他项之后这样才能确保显示，否则将被覆盖-->
            <Rectangle Grid.Row="4" 
                       Grid.Column="0"
                       Width="5"
                       Height="5"
                       Cursor="SizeNESW"
                       Fill="Transparent"
                       MouseLeftButtonDown="WindowsInitiateLeftBottomGrip"
                       MouseLeftButtonUp="WindowsEndLeftBottomGrip"
                       MouseMove="WindowsLeftBottomGrip"></Rectangle>

            <!--窗口右下Grip调整-->
            <!--注意此项是覆盖在其他内容之上的，只是此项被设置为透明，此项必须放在其他项之后这样才能确保显示，否则将被覆盖-->
            <Rectangle Grid.Row="4" 
                       Grid.Column="2"
                       Width="5"
                       Height="5"
                       Cursor="SizeNWSE"
                       Fill="Transparent"
                       MouseLeftButtonDown="WindowsInitiateRightBottomGrip"
                       MouseLeftButtonUp="WindowsEndRightBottomGrip"
                       MouseMove="WindowsRightBottomGrip"></Rectangle>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>