<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:Controls="clr-namespace:Banclogix.Controls;assembly=Banclogix.Controls.WPF"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" >
    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
        <GradientStop Color="#ABADB3" Offset="0.05"/>
        <GradientStop Color="#E2E3EA" Offset="0.07"/>
        <GradientStop Color="#E3E9EF" Offset="1"/>
    </LinearGradientBrush>
    <Style TargetType="PasswordBox">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical">
                        <AdornedElementPlaceholder x:Name="adorner"/>
                        <TextBlock x:Name="text" Foreground="Red" FontWeight="Bold" Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border x:Name="border"  Background="#ffffff" BorderThickness="1" BorderBrush="#a3a3a3">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="1" Color="#ffffff" Direction="270" ShadowDepth="1" />
                            </Border.Effect>
                            <Rectangle x:Name="neiyinying" Stroke="#000000"  Height="1"   VerticalAlignment="Top"   Opacity="0.07" />
                        </Border>
                        <Themes:ClassicBorderDecorator x:Name="Bd"  BorderStyle="None" >
                            <ScrollViewer x:Name="PART_ContentHost" BorderBrush="Transparent" VerticalAlignment="Center" Background="Transparent"/>
                        </Themes:ClassicBorderDecorator>
                    </Grid>
                    <!--</Grid>-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#999999"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFC9C9C9"/>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF42B0ED"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#FFA5D6F7" Direction="270" Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF42B0ED"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#FFA5D6F7" Direction="270" Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter  Property="Margin" Value="0,-7,0,0"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF0000"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#ff0000"  Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Binding Path="(Validation.Errors).CurrentItem.ErrorContent"
                                 RelativeSource="{x:Static RelativeSource.Self}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>