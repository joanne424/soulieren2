<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:Banclogix.Controls;assembly=Banclogix.Controls.WPF"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
    
    <!--<Style TargetType="{x:Type extend:AmountTextBox}">
        <Setter Property="Height"
                Value="21" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Arial,NSimSun" />
        <Setter Property="FontSize"
                Value="11" />
        <Setter Property="Foreground"
                Value="{DynamicResource FontColor}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource ControlBorderColor}" />
        <Setter Property="CaretBrush"
                Value="{DynamicResource FontColor}" />
        <Setter Property="SelectionBrush"
                Value="LightBlue" />
        <Setter Property="SelectionOpacity"
                Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="border"
                            Padding="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlBackgroundColor}" />
                        </Border.Background>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" Direction="0" ShadowDepth="5" Opacity="1"/>
                        </Border.Effect>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource DisableControlBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource DisableControlBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                                      x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource TxtBoxHoverColor}" />
                         </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical">
                        <AdornedElementPlaceholder x:Name="adorner"/>
                        <TextBlock x:Name="text" Foreground="Red" FontWeight="Bold" Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="{DynamicResource DisabledFontColor}" />
            </Trigger>
            <Trigger Property="IsReadOnly"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource DisabledFontColor}" />
            </Trigger>
   
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter  Property="Margin" Value="0,-7,0,0"/>
                </Trigger>
  
        </Style.Triggers>
    </Style>-->
    
    <Style x:Key="LoginTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Arial,NSimSun" />
        <!--<Setter Property="TextOptions.TextFormattingMode"
                Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode"
                Value="Aliased" />-->
        <Setter Property="FontSize"
                Value="11" />
        <Setter Property="Foreground"
                Value="{DynamicResource FontColor}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource ControlBorderColor}" />
        <Setter Property="CaretBrush"
                Value="{DynamicResource FontColor}" />
        <Setter Property="SelectionBrush"
                Value="LightBlue" />
        <Setter Property="SelectionOpacity"
                Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="border"
                            Padding="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <!-- 背景色 -->
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlBackgroundColor}" />
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource DisableControlBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource DisableControlBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                                      x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical">
                        <AdornedElementPlaceholder x:Name="adorner"/>
                        <TextBlock x:Name="text" Foreground="Red" FontWeight="Bold" Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="{DynamicResource DisabledFontColor}" />
            </Trigger>
          
                <!--输入出错的样式-->
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter  Property="Margin" Value="0,-7,0,0"/>
                </Trigger>

           
        </Style.Triggers>
    </Style>

    <!--<Style TargetType="{x:Type local:PasswordBoxCtr}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical">
                        <AdornedElementPlaceholder x:Name="adorner"/>
                        <TextBlock x:Name="text" Foreground="Red" FontWeight="Bold" Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PasswordBoxCtr}">
                    <Grid>
                        <Border x:Name="border"  Background="#ffffff" BorderThickness="1" BorderBrush="#a3a3a3">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="1" Color="#ffffff" Direction="270" ShadowDepth="1" />
                            </Border.Effect>
                            <Rectangle x:Name="neiyinying" Stroke="#000000"  Height="1"   VerticalAlignment="Top"   Opacity="0.07" />
                        </Border>
                        <Themes:ClassicBorderDecorator x:Name="Bd"  BorderStyle="None" >
                            <ScrollViewer x:Name="PART_ContentHost" BorderBrush="Transparent" VerticalAlignment="Center" Background="Transparent"/>
                        </Themes:ClassicBorderDecorator>
                    </Grid>
                   
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#999999"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFC9C9C9"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF42B0ED"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#FFA5D6F7" Direction="270" Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="local:PasswordBoxCtr.IsPasswordVisible" Value="True"></Setter>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF42B0ED"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#FFA5D6F7" Direction="270" Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter  Property="Margin" Value="0,-7,0,0"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF0000"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#ff0000"  Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>-->


    <!--<Style  TargetType="{x:Type local:AmountText}">
      
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical">
                        <AdornedElementPlaceholder x:Name="adorner"/>
                        <TextBlock x:Name="text" Foreground="Red" FontWeight="Bold" Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AmountText}">
                    <Grid>
                        <Border x:Name="border"  Background="#ffffff" BorderThickness="1" BorderBrush="#a3a3a3">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="1" Color="#ffffff" Direction="270" ShadowDepth="1" />
                            </Border.Effect>
                            <Rectangle x:Name="neiyinying" Stroke="#000000"  Height="1"   VerticalAlignment="Top"   Opacity="0.07" />
                        </Border>
                        <Themes:ClassicBorderDecorator x:Name="Bd"  BorderStyle="None" >
                            <ScrollViewer x:Name="PART_ContentHost" BorderBrush="Transparent" VerticalAlignment="Center" Background="Transparent"/>
                        </Themes:ClassicBorderDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#999999"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFC9C9C9"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF42B0ED"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#FFA5D6F7" Direction="270" Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF42B0ED"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#FFA5D6F7" Direction="270" Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter  Property="Margin" Value="0,-7,0,0"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF0000"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#ff0000"  Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>-->
    <!--<Style  TargetType="{x:Type Controls:CurrencyAmountEditor}">
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Foreground"
                Value="#FF333333" />
        <Setter Property="FontFamily"
                Value="Arial" />
        <Setter Property="Height"
                Value="23" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical">
                        <AdornedElementPlaceholder x:Name="adorner" />
                        <TextBlock x:Name="text"
                                   Foreground="Red"
                                   FontWeight="Bold"
                                   Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:CurrencyAmountEditor}">
                    <Grid>
                        <Border x:Name="border"
                                Background="#ffffff"
                                BorderThickness="1"
                                BorderBrush="#a3a3a3">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="1"
                                                  Color="#ffffff"
                                                  Direction="270"
                                                  ShadowDepth="1" />
                            </Border.Effect>
                            <Rectangle x:Name="neiyinying"
                                       Stroke="#000000"
                                       Height="1"
                                       VerticalAlignment="Top"
                                       Opacity="0.07" />
                        </Border>
                        <Themes:ClassicBorderDecorator x:Name="Bd"
                                                       BorderStyle="None">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          BorderBrush="Transparent"
                                          VerticalAlignment="Center"
                                          Background="Transparent" />
                        </Themes:ClassicBorderDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="#999999" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FFC9C9C9" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF42B0ED" />
                            <Setter Property="Effect"
                                    TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0"
                                                      Color="#FFA5D6F7"
                                                      Direction="270"
                                                      Opacity="1"
                                                      BlurRadius="4" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF42B0ED" />
                            <Setter Property="Effect"
                                    TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0"
                                                      Color="#FFA5D6F7"
                                                      Direction="270"
                                                      Opacity="1"
                                                      BlurRadius="4" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Validation.HasError"
                                 Value="true">
                            <Setter  Property="Margin"
                                     Value="0,-7,0,0" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="#FF0000" />
                            <Setter Property="Effect"
                                    TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0"
                                                      Color="#ff0000"
                                                      Opacity="1"
                                                      BlurRadius="4" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  TargetType="{x:Type local:NumericBox}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical">
                        <AdornedElementPlaceholder x:Name="adorner"/>
                        <TextBlock x:Name="text" Foreground="Red" FontWeight="Bold" Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NumericBox}">
                    <Grid>
                        <Border x:Name="border"  Background="#ffffff" BorderThickness="1" BorderBrush="#a3a3a3">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="1" Color="#ffffff" Direction="270" ShadowDepth="1" />
                            </Border.Effect>
                            <Rectangle x:Name="neiyinying" Stroke="#000000"  Height="1"   VerticalAlignment="Top"   Opacity="0.07" />
                        </Border>
                        <Themes:ClassicBorderDecorator x:Name="Bd"  BorderStyle="None" >
                            <ScrollViewer x:Name="PART_ContentHost" BorderBrush="Transparent" VerticalAlignment="Center" Background="Transparent"/>
                        </Themes:ClassicBorderDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#999999"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFC9C9C9"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF42B0ED"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#FFA5D6F7" Direction="270" Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF42B0ED"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#FFA5D6F7" Direction="270" Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="Margin" Value="0,-7,0,0"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF0000"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#ff0000"  Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>-->

    <Style x:Key="phonePasswordStyle" TargetType="TextBox">
        <Setter Property="Height"
                Value="21" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="controlTemplate" TargetType="TextBox">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                        <Grid >
                            <TextBox x:Name="text" IsEnabled="False" Visibility="Collapsed" 
                                                 Text="{Binding Text,RelativeSource={RelativeSource  AncestorLevel=1, Mode=FindAncestor, AncestorType=TextBox}}" />
                            <TextBlock x:Name="frontText" VerticalAlignment="Center" Background="LightGray"  Text="********">
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="frontText" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="text" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="noInputPassword" TargetType="{x:Type PasswordBox}">
        <Setter Property="Height"
                Value="21" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Arial,NSimSun" />
        <Setter Property="FontSize"
                Value="11" />
        <Setter Property="Foreground"
                Value="{DynamicResource FontColor}" />
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="PasswordChar"
                Value="*" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="BorderBrush"
                Value="#A3A3A3" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="CaretBrush"
                Value="{DynamicResource FontColor}" />
        <Setter Property="SelectionBrush"
                Value="LightBlue" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical">
                        <AdornedElementPlaceholder x:Name="adorner"/>
                        <TextBlock x:Name="text" Foreground="Red" FontWeight="Bold" Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid >
                        <TextBox x:Name="text" IsEnabled="False"  Visibility="Collapsed" Text="{Binding Password,RelativeSource={RelativeSource  AncestorLevel=1, Mode=FindAncestor, AncestorType=PasswordBox}}" />
                        <Themes:ClassicBorderDecorator  x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="Sunken" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  VerticalAlignment="Center"/>
                        </Themes:ClassicBorderDecorator>

                    </Grid>
                    <!--</Grid>-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#999999"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="Bd" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="text" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter  Property="Margin" Value="0,-7,0,0"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   
    
    <Style  TargetType="{x:Type PasswordBox}">
        <Setter Property="Height"
                Value="21" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Arial,NSimSun" />
        <Setter Property="FontSize"
                Value="11" />
        <Setter Property="Foreground"
                Value="{DynamicResource FontColor}" />
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="PasswordChar"
                Value="*" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="BorderBrush"
                Value="#A3A3A3" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="CaretBrush"
                Value="{DynamicResource FontColor}" />
        <Setter Property="SelectionBrush"
                Value="LightBlue" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical">
                        <AdornedElementPlaceholder x:Name="adorner"/>
                        <TextBlock x:Name="text" Foreground="Red" FontWeight="Bold" Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid >
                        <Border x:Name="border"  Background="#ffffff" BorderThickness="1" BorderBrush="#a3a3a3">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="1" Color="#ffffff" Direction="270" ShadowDepth="1" />
                            </Border.Effect>
                            <Rectangle x:Name="neiyinying" Stroke="#000000"  Height="1"   VerticalAlignment="Top"   Opacity="0.07" />
                        </Border>
                        <Themes:ClassicBorderDecorator  x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="Sunken" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  VerticalAlignment="Center"/>
                        </Themes:ClassicBorderDecorator>

                    </Grid>
                    <!--</Grid>-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#999999"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFC9C9C9"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF42B0ED"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#FFA5D6F7" Direction="270" Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF42B0ED"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#FFA5D6F7" Direction="270" Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter  Property="Margin" Value="0,-7,0,0"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF0000"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" Color="#ff0000"  Opacity="1" BlurRadius="4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LogionPasswaord" TargetType="{x:Type PasswordBox}">
        <Setter Property="Height"
                Value="21" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Arial,NSimSun" />
        <!--<Setter Property="TextOptions.TextFormattingMode"
                Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode"
                Value="Aliased" />-->
        <Setter Property="FontSize"
                Value="11" />
        <Setter Property="Foreground"
                Value="{DynamicResource FontColor}" />
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="PasswordChar"
                Value="*" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="BorderBrush"
                Value="#A3A3A3" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="CaretBrush"
                Value="{DynamicResource FontColor}" />
        <Setter Property="SelectionBrush"
                Value="LightBlue" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical">
                        <AdornedElementPlaceholder x:Name="adorner"/>
                        <TextBlock x:Name="text" Foreground="Red" FontWeight="Bold" Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Name="border"
                            Padding="2"  BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"  >
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlBackgroundColor}" />
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--输入出错的样式-->
            <Trigger Property="Validation.HasError" Value="true">
                <Setter  Property="Margin" Value="0,-7,0,0"/>
            </Trigger>

        </Style.Triggers>
    </Style>
    <!--<Style TargetType="{x:Type Controls:NullableDecimalBox}">
        <Setter Property="Height"
                Value="23" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Arial,NSimSun" />
     
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Foreground"
                Value="{DynamicResource FontColor}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource ControlBorderColor}" />
        <Setter Property="CaretBrush"
                Value="{DynamicResource FontColor}" />
        <Setter Property="SelectionBrush"
                Value="LightBlue" />
        <Setter Property="SelectionOpacity"
                Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type  Controls:NullableDecimalBox}">
                    <Border Name="border"
                            Padding="2"  
                            BorderBrush="#A3A3A3 "
                            BorderThickness="1">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlBackgroundColor}" />
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource DisableControlBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource DisableControlBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Margin="0"
                                      x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#42B0ED" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Vertical">
                        <AdornedElementPlaceholder x:Name="adorner"/>
                        <TextBlock x:Name="text" Foreground="Red" FontWeight="Bold" Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="#999999" />
                <Setter Property="BorderBrush" Value="#C9C9C9" />
            </Trigger>
            <Trigger Property="IsReadOnly"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource DisabledFontColor}" />
            </Trigger>
 
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter  Property="Margin" Value="0,-7,0,0"/>
                </Trigger>

            
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:SignedAmountOrEmptyText}" BasedOn="{StaticResource {x:Type TextBox}}"/>-->
</ResourceDictionary>